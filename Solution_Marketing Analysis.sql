







--1. How many transactions were completed during each marketing campaign?
SELECT mc.campaign_id, mc.campaign_name
FROM marketing_campaigns AS mc
JOIN Marketing_transactions AS mt ON mc.product_id = mt.product_id
ORDER BY mc.campaign_id;
  


--2.Which product had the highest sales quantity?
SELECT TOP 1 p.product_name as Product_Name , SUM(t.quantity) AS Highest_sales_quantity
FROM sustainable_clothing p
INNER JOIN marketing_transactions t ON p.product_id = t.product_id
GROUP BY p.product_name
ORDER BY Highest_sales_quantity DESC;

--3.What is the total revenue generated from each marketing 	campaign?
SELECT format(SUM(t.quantity * sc.price),'C') AS Total_Revenue,c.campaign_id, c.campaign_name as Camp_Name
FROM marketing_transactions t
INNER JOIN marketing_campaigns c ON t.product_id = c.product_id
 join sustainable_clothing sc on t.product_id=sc.product_id
WHERE t.purchase_date BETWEEN c.start_date AND c.end_date
GROUP BY c.campaign_name, c.campaign_id
order by c.campaign_id asc

--4.What is the top-selling product category based on the total revenue generated?

SELECT TOP 1 sc.product_name AS Product_Name, FORMAT(SUM(t.quantity * sc.price), 'C') AS Total_Revenue
FROM marketing_transactions t
INNER JOIN sustainable_clothing sc ON t.product_id = sc.product_id
GROUP BY sc.product_name
ORDER BY SUM(t.quantity * sc.price) DESC;

--5.Which products had a higher quantity sold compared to the 	average quantity sold?
SELECT sc.product_name as Prod_Name, t.product_id as Prod_Id, SUM(quantity) AS Highest_Qty
FROM Marketing_transactions t
INNER JOIN sustainable_clothing sc ON t.product_id = sc.product_id
GROUP BY sc.product_name, t.product_id
HAVING SUM(quantity) > (SELECT AVG(total_qty) FROM (
                                SELECT SUM(quantity) AS total_qty
                                FROM Marketing_transactions
                                GROUP BY product_id
                            ) AS avg_qty)
ORDER BY highest_Qty DESC;

--6.What is the average revenue generated per day during the 	marketing campaigns?


select * from Marketing_transactions mt join marketing_campaigns mc on mt.product_id=mc.product_id
WHERE mt.purchase_date BETWEEN mc.start_date AND mc.end_date and mc.campaign_id=1

--7. What is the percentage contribution of each product to the total revenue?
	 SELECT    sc.product_name,
    FORMAT(SUM(t.quantity * sc.price), 'C') AS product_revenue,format(total_revenue,'c') as Total_revenue,
    FORMAT((SUM(t.quantity * sc.price) / total_revenue) * 100, 'N2') + '%' AS Percentage_Contribution
FROM
    sustainable_clothing sc 
INNER JOIN
    marketing_transactions t ON t.product_id = sc.product_id
CROSS JOIN
    (SELECT SUM(t.quantity * sc.price) AS total_revenue 
     FROM marketing_transactions AS t 
     INNER JOIN sustainable_clothing sc ON t.product_id = sc.product_id) AS total
GROUP BY
    sc.product_name, total.total_revenue
ORDER BY
   (SUM(t.quantity * sc.price) / total_revenue) * 100 DESC;


--8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

WITH cte AS (
    SELECT CAST(Round(AVG(t.quantity),2) as decimal (10,2)) AS avg_qty_during_campaign
    FROM marketing_transactions t
    JOIN sustainable_clothing s ON t.product_id = s.product_id
    JOIN marketing_campaigns m ON t.purchase_date BETWEEN m.start_date AND m.end_date
        AND t.product_id = m.product_id
),
cte2 AS (
    SELECT CAST(Round(AVG(t.quantity),2) as decimal (10,2)) AS total_avg_qty
    FROM marketing_transactions t
    JOIN sustainable_clothing s ON t.product_id = s.product_id
)
SELECT total_avg_qty, avg_qty_during_campaign, 
    total_avg_qty - avg_qty_during_campaign AS avg_qty_outside_campaign
FROM cte, cte2;


/* 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns */
WITH cte AS (
    SELECT ROUND(SUM(quantity * price), 2) AS Tot_Rev_During_Campaign
    FROM marketing_transactions t
    JOIN sustainable_clothing s ON t.product_id = s.product_id
    JOIN marketing_campaigns m ON t.purchase_date BETWEEN m.start_date AND m.end_date
        AND t.product_id = m.product_id
),
cte2 AS (
    SELECT ROUND(SUM(quantity * price), 2) AS Total_Revenue
    FROM marketing_transactions t
    JOIN sustainable_clothing s ON t.product_id = s.product_id
)
SELECT Total_Revenue, Tot_Rev_During_Campaign, 
    Total_Revenue - Tot_Rev_During_Campaign AS Tot_Rev_Outside_Campaign
FROM cte, cte2;


 /* 10. Rank the products by their average daily quantity sold */
 WITH cte AS (
    SELECT s.product_name as Produc_Name, CAST(Round(AVG(t.quantity),2) as decimal (10,2)) AS Avg_Daily_Qty 
    FROM Marketing_transactions t
    JOIN sustainable_clothing s ON t.product_id = s.product_id 
    GROUP BY s.product_name
)
SELECT Produc_Name, Avg_Daily_Qty, 
    DENSE_RANK() OVER (ORDER BY Avg_Daily_Qty) AS Rank_Avg
FROM cte;